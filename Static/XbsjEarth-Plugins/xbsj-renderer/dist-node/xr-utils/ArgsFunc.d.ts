export declare type ArgsFunc0<R> = () => R;
export declare type ArgsFunc1<R, A> = (arg0: A) => R;
export declare type ArgsFunc2<R, A, B> = (...args: [A, B]) => R;
export declare type ArgsFunc3<R, A, B, C> = (...args: [A, B, C]) => R;
export declare type ArgsFunc4<R, A, B, C, D> = (...args: [A, B, C, D]) => R;
export declare type ArgsFunc5<R, A, B, C, D, E> = (...args: [A, B, C, D, E]) => R;
export declare type ArgsFunc6<R, A, B, C, D, E, F> = (...args: [A, B, C, D, E, F]) => R;
export declare type ArgsFunc7<R, A, B, C, D, E, F, G> = (...args: [A, B, C, D, E, F, G]) => R;
export declare type ArgsFunc8<R, A, B, C, D, E, F, G, H> = (...args: [A, B, C, D, E, F, G, H]) => R;
export declare type ArgsFunc9<R, A, B, C, D, E, F, G, H, I> = (...args: [A, B, C, D, E, F, G, H, I]) => R;
export declare type ArgsFunc10<R, A, B, C, D, E, F, G, H, I, J> = (...args: [A, B, C, D, E, F, G, H, I, J]) => R;
export declare type ArgsFunc11<R, A, B, C, D, E, F, G, H, I, J, K> = (...args: [A, B, C, D, E, F, G, H, I, J, K]) => R;
export declare type ArgsFunc12<R, A, B, C, D, E, F, G, H, I, J, K, L> = (...args: [A, B, C, D, E, F, G, H, I, J, K, L]) => R;
export declare type ArgsFunc13<R, A, B, C, D, E, F, G, H, I, J, K, L, M> = (...args: [A, B, C, D, E, F, G, H, I, J, K, L, M]) => R;
export declare type ArgsFunc14<R, A, B, C, D, E, F, G, H, I, J, K, L, M, N> = (...args: [A, B, C, D, E, F, G, H, I, J, K, L, M, N]) => R;
export declare type ArgsFunc15<R, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O> = (...args: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]) => R;
export declare type ArgsFunc16<R, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P> = (...args: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]) => R;
export declare type ArgsFunc17<R, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q> = (...args: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]) => R;
export declare type ArgsFunc18<R, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, S> = (...args: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, S]) => R;
