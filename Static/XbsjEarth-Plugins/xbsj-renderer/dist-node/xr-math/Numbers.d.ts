export declare type Number1_Index = 0;
export declare type Number2_Index = 0 | 1;
export declare type Number3_Index = 0 | 1 | 2;
export declare type Number4_Index = 0 | 1 | 2 | 3;
export declare type Number5_Index = 0 | 1 | 2 | 3 | 4;
export declare type Number6_Index = 0 | 1 | 2 | 3 | 4 | 5;
export declare type Number7_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6;
export declare type Number8_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
export declare type Number9_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;
export declare type Number10_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
export declare type Number11_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
export declare type Number12_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;
export declare type Number13_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
export declare type Number14_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13;
export declare type Number15_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14;
export declare type Number16_Index = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;
declare type Numbers_Inner = {
    [index: number]: number;
    readonly length: number;
};
declare type Number1_Inner = {
    0: number;
    length: 1;
};
declare type Number2_Inner = {
    0: number;
    1: number;
    length: 2;
};
declare type Number3_Inner = {
    0: number;
    1: number;
    2: number;
    length: 3;
};
declare type Number4_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    length: 4;
};
declare type Number5_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    length: 5;
};
declare type Number6_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    length: 6;
};
declare type Number7_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    length: 7;
};
declare type Number8_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    length: 8;
};
declare type Number9_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    length: 9;
};
declare type Number10_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    length: 10;
};
declare type Number11_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    10: number;
    length: 11;
};
declare type Number12_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    10: number;
    11: number;
    length: 12;
};
declare type Number13_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    10: number;
    11: number;
    12: number;
    length: 13;
};
declare type Number14_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    10: number;
    11: number;
    12: number;
    13: number;
    length: 14;
};
declare type Number15_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    10: number;
    11: number;
    12: number;
    13: number;
    14: number;
    length: 15;
};
declare type Number16_Inner = {
    0: number;
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
    6: number;
    7: number;
    8: number;
    9: number;
    10: number;
    11: number;
    12: number;
    13: number;
    14: number;
    15: number;
    length: 16;
};
export declare type Numbers = Numbers_Inner | number[] | Float64Array | Uint8Array;
export declare type Number1 = Number1_Inner | [number] | Float64Array | Uint8Array;
export declare type Number2 = Number2_Inner | [number, number] | Float64Array | Uint8Array;
export declare type Number3 = Number3_Inner | [number, number, number] | Float64Array | Uint8Array;
export declare type Number4 = Number4_Inner | [number, number, number, number] | Float64Array | Uint8Array;
export declare type Number5 = Number5_Inner | [number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number6 = Number6_Inner | [number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number7 = Number7_Inner | [number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number8 = Number8_Inner | [number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number9 = Number9_Inner | [number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number10 = Number10_Inner | [number, number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number11 = Number11_Inner | [number, number, number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number12 = Number12_Inner | [number, number, number, number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number13 = Number13_Inner | [number, number, number, number, number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number14 = Number14_Inner | [number, number, number, number, number, number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number15 = Number15_Inner | [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare type Number16 = Number16_Inner | [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number] | Float64Array | Uint8Array;
export declare function createNumbers(length: 1, ...values: number[]): Number1;
export declare function createNumbers(length: 2, ...values: number[]): Number2;
export declare function createNumbers(length: 3, ...values: number[]): Number3;
export declare function createNumbers(length: 4, ...values: number[]): Number4;
export declare function createNumbers(length: 5, ...values: number[]): Number5;
export declare function createNumbers(length: 6, ...values: number[]): Number6;
export declare function createNumbers(length: 7, ...values: number[]): Number7;
export declare function createNumbers(length: 8, ...values: number[]): Number8;
export declare function createNumbers(length: 9, ...values: number[]): Number9;
export declare function createNumbers(length: 10, ...values: number[]): Number10;
export declare function createNumbers(length: 11, ...values: number[]): Number11;
export declare function createNumbers(length: 12, ...values: number[]): Number12;
export declare function createNumbers(length: 13, ...values: number[]): Number13;
export declare function createNumbers(length: 14, ...values: number[]): Number14;
export declare function createNumbers(length: 15, ...values: number[]): Number15;
export declare function createNumbers(length: 16, ...values: number[]): Number16;
export declare function createNumbers(length: number, ...values: number[]): Numbers;
export declare type XY = {
    x: number;
    y: number;
};
export declare type XYZ = {
    x: number;
    y: number;
    z: number;
};
export declare type XYZW = {
    x: number;
    y: number;
    z: number;
    w: number;
};
export declare class Xyzw2Ns {
    private _xyzw;
    private _length;
    constructor(_xyzw: Partial<XYZW>, _length: number);
    set [0](value: number);
    set [1](value: number);
    set [2](value: number);
    set [3](value: number);
    get [0](): number;
    get [1](): number;
    get [2](): number;
    get [3](): number;
    get length(): number;
}
export declare function xyz2N2(xyz: XY): Number2;
export declare function xyz2N3(xyz: XYZ): Number3;
export declare function xyzw2N4(xyzw: XYZW): Number4;
export declare function ary2Ns(array: Numbers, length: 1, start: number, stride: number): Number1;
export declare function ary2Ns(array: Numbers, length: 2, start: number, stride: number): Number2;
export declare function ary2Ns(array: Numbers, length: 3, start: number, stride: number): Number3;
export declare function ary2Ns(array: Numbers, length: 4, start: number, stride: number): Number4;
export declare function ary2Ns(array: Numbers, length: 5, start: number, stride: number): Number5;
export declare function ary2Ns(array: Numbers, length: 6, start: number, stride: number): Number6;
export declare function ary2Ns(array: Numbers, length: 7, start: number, stride: number): Number7;
export declare function ary2Ns(array: Numbers, length: 8, start: number, stride: number): Number8;
export declare function ary2Ns(array: Numbers, length: 9, start: number, stride: number): Number9;
export declare function ary2Ns(array: Numbers, length: 10, start: number, stride: number): Number10;
export declare function ary2Ns(array: Numbers, length: 11, start: number, stride: number): Number11;
export declare function ary2Ns(array: Numbers, length: 12, start: number, stride: number): Number12;
export declare function ary2Ns(array: Numbers, length: 13, start: number, stride: number): Number13;
export declare function ary2Ns(array: Numbers, length: 14, start: number, stride: number): Number14;
export declare function ary2Ns(array: Numbers, length: 15, start: number, stride: number): Number15;
export declare function ary2Ns(array: Numbers, length: 16, start: number, stride: number): Number16;
export {};
